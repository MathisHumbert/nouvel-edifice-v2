@use "sass:map";
@use "sass:list";

$ease-in-out: cubic-bezier(0.7, 0, 0.3, 1);
$expo-in-out: cubic-bezier(0.9, 0, 0.1, 1);
$ease-out: cubic-bezier(0.39, 0.575, 0.565, 1);
$expo-out: cubic-bezier(0.19, 1, 0.22, 1);

$font-maquette: "ARS Maquette Pro";

$color-white: #ffffff;
$color-black: #2f3538;
$color-orange: #f6483e;
$color-beige: #f3e9db;

$colors: (
  "white": $color-white,
  "black": $color-black,
  "orange": $color-orange,
  "beige": $color-beige,
);

$breakpoints: (
  "desktop": 1920,
  "mobile": 768,
);

$sizes: (
  "desktop": 1920,
  "mobile": 1000,
);

$z-indexes: (
  "grid",
  "preloader",
  "booklet",
  "navigation",
  "fixed",
  "content",
  "canvas"
);

$grid: (
  "count": (
    12,
    6,
  ),
  "gutter": (
    2rem,
    2rem,
  ),
  "margin": (
    3.2rem,
    2.4rem,
  ),
);

:root {
  --breakpoints-desktop: #{map.get($breakpoints, "desktop")};
  --breakpoints-mobile: #{map.get($breakpoints, "mobile")};
  --sizes-desktop: #{map.get($sizes, "desktop")};
  --sizes-mobile: #{map.get($sizes, "mobile")};

  --grid-count: #{list.nth(map.get($grid, "count"), 1)};
  --grid-gutter: #{list.nth(map.get($grid, "gutter"), 1)};
  --grid-margin: #{list.nth(map.get($grid, "margin"), 1)};

  @each $name, $color in $colors {
    --#{$name}: #{$color};
  }

  @media (max-width: #{map.get($breakpoints, 'mobile')}px) {
    --grid-count: #{list.nth(map.get($grid, "count"), 2)};
    --grid-gutter: #{list.nth(map.get($grid, "gutter"), 2)};
    --grid-margin: #{list.nth(map.get($grid, "margin"), 2)};
  }
}

$grid-count: var(--grid-count);
$grid-gutter: var(--grid-gutter);
$grid-margin: var(--grid-margin);
$grid-width: calc(100vw - (2 * $grid-margin));
$grid-column-width: calc(
  ($grid-width - (($grid-count - 1) * $grid-gutter)) / $grid-count
);

$sizes-desktop: var(--sizes-desktop);
$sizes-mobile: var(--sizes-mobile);
